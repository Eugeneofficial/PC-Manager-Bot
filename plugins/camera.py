import cv2
import os
from . import BotPlugin
from telegram import Update
from telegram.ext import ContextTypes

class CameraPlugin(BotPlugin):
    """–ü–ª–∞–≥–∏–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞–º–µ—Ä–æ–π"""
    
    @property
    def name(self) -> str:
        return "Camera"
        
    @property
    def description(self) -> str:
        return "–ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ —Å –∫–∞–º–µ—Ä—ã"
        
    @property
    def buttons(self) -> list:
        return [["üì∏ –§–æ—Ç–æ —Å –∫–∞–º–µ—Ä—ã"]]
        
    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        if update.message.text == "üì∏ –§–æ—Ç–æ —Å –∫–∞–º–µ—Ä—ã":
            try:
                # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞–º–µ—Ä—É
                cap = cv2.VideoCapture(0)
                
                # –î–µ–ª–∞–µ–º —Å–Ω–∏–º–æ–∫
                ret, frame = cap.read()
                if not ret:
                    await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞–¥—Ä —Å –∫–∞–º–µ—Ä—ã")
                    return
                    
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ
                cv2.imwrite("camera.jpg", frame)
                cap.release()
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                await update.message.reply_photo(
                    photo=open("camera.jpg", "rb"),
                    caption="üì∏ –§–æ—Ç–æ —Å –∫–∞–º–µ—Ä—ã"
                )
                
                # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                os.remove("camera.jpg")
                
            except Exception as e:
                await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
                
            return True
            
        return False 