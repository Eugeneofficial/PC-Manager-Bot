import os
import ctypes
from telegram import InlineKeyboardButton
from plugins import BotPlugin

class SystemPlugin(BotPlugin):
    @property
    def name(self) -> str:
        return "–°–∏—Å—Ç–µ–º–∞"
        
    @property
    def description(self) -> str:
        return "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π –∏ –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
        
    @property
    def buttons(self) -> list:
        return [
            [
                InlineKeyboardButton("üíª –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞", callback_data="system_admin"),
                InlineKeyboardButton("üîå –í—ã–∫–ª—é—á–µ–Ω–∏–µ", callback_data="system_shutdown")
            ]
        ]
        
    async def handle_callback(self, callback_data: str, update, context) -> bool:
        if callback_data == "system_admin":
            try:
                is_admin = ctypes.windll.shell32.IsUserAnAdmin()
                if not is_admin:
                    ctypes.windll.shell32.ShellExecuteW(None, "runas", "python", __file__, None, 1)
                await update.callback_query.message.reply_text("‚úÖ –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—É—á–µ–Ω—ã")
            except Exception as e:
                await update.callback_query.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
            return True
            
        elif callback_data == "system_shutdown":
            try:
                os.system('shutdown /s /t 60')
                await update.callback_query.message.reply_text("üîå –ö–æ–º–ø—å—é—Ç–µ—Ä –±—É–¥–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É")
            except Exception as e:
                await update.callback_query.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
            return True
            
        return False 